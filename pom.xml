<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.rest-api-testing-project</groupId>
	<artifactId>network-environment</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M4</version>
				<configuration>
					<suiteXmlFiles>
						<suiteXmlFile>testng.xml</suiteXmlFile>
					</suiteXmlFiles>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
		</plugins>
	</build>


	<dependencies>
		<!-- Place rest-assured before the JUnit dependency declaration in your 
			pom.xml / build.gradle in order to make sure that the correct version of 
			Hamcrest is used. REST Assured includes JsonPath and XmlPath as transitive 
			dependencies -->
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>4.3.3</version>
			<scope>test</scope>
		</dependency>

	<!--TestNG dependency - the skeleton where all the test will be on top of 
		that skeleton -->
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>6.9.8</version>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/io.rest-assured/rest-assured -->
		<!-- rest-assured = is the REST API testing framework - to test the REST 
			endpoints -->


		<!-- https://mvnrepository.com/artifact/org.hamcrest/hamcrest-library -->
		<!-- We need Hamcrest for assertion matchers <dependency> <groupId>org.hamcrest</groupId> 
			<artifactId>hamcrest-library</artifactId> <version>2.2</version> <scope>test</scope> 
			</dependency> -->
	</dependencies>

</project>